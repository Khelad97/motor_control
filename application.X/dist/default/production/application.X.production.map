Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\application.X.production.sym \
  --cmf=dist/default/production\application.X.production.cmf -z -Q18F46K20 \
  -oC:\Users\KHELAD~1\AppData\Local\Temp\sb3sx3 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/application.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=060h-0F5Fh -pstack=STACK \
  -ACODE=00h-0FFFFh -ACONST=00h-0FFFFh -ASMALLCONST=01000h-010FFhx240 \
  -AMEDIUMCONST=01000h-0FFFFh -ACOMRAM=01h-05Fh -AABS1=00h-0F5Fh \
  -ABIGRAM=01h-0F5Fh -ARAM=060h-0FFh,0100h-01FFhx14,0F00h-0F5Fh \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ABANK8=0800h-08FFh \
  -ABANK9=0900h-09FFh -ABANK10=0A00h-0AFFh -ABANK11=0B00h-0BFFh \
  -ABANK12=0C00h-0CFFh -ABANK13=0D00h-0DFFh -ABANK14=0E00h-0EFFh \
  -ABANK15=0F00h-0F5Fh -ASFR=0F60h-0FFFh -ACONFIG=0300000h-030000Dh \
  -AIDLOC=0200000h-0200007h -AEEDATA=0F00000h-0F003FFh -peeprom_data=EEDATA \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=01000h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\KHELAD~1\AppData\Local\Temp\sb3sx9.o \
  dist/default/production\application.X.production.o 

Object code version is 3.11

Machine type is 18F46K20



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\KHELAD~1\AppData\Local\Temp\sb3sx9.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                init                                  0        0        4        0       0
dist/default/production\application.X.production.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                text18                             FADE     FADE       5E     7D6F       0
                text17                             FC8A     FC8A       7E     7E45       0
                text16                             FE68     FE68       CC     7F34       0
                text15                             FB9E     FB9E       76     7DCF       0
                text14                             FC14     FC14       76     7E0A       0
                text13                             F9B6     F9B6       34     7CDB       0
                text12                             F88A     F88A       32     7C45       0
                text11                             F9EA     F9EA       34     7CF5       0
                text10                             F8BC     F8BC       32     7C5E       0
                text9                              F8EE     F8EE       32     7C77       0
                text8                              F920     F920       32     7C90       0
                text7                              FDA0     FDA0       C8     7ED0       0
                text6                              FA86     FA86       58     7D43       0
                text5                              FD08     FD08       98     7E84       0
                text4                              FA1E     FA1E       34     7D0F       0
                text3                              FB3C     FB3C       62     7D9E       0
                text2                              FA52     FA52       34     7D29       0
                text1                              F952     F952       32     7CA9       0
                text0                              FF34     FF34       CC     7F9A       0
                cstackCOMRAM                         2B       2B       10        1       1
                dataCOMRAM                            1        1       2A        1       1
                bssCOMRAM                            3B       3B        4        1       1
                cinit                              F984     F984       32     7CC2       0
                idataCOMRAM                        F860     F860       2A     F860       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text18                             FADE     FADE       5E         0
                text17                             FC8A     FC8A       7E         0
                text16                             FE68     FE68       CC         0
                text15                             FB9E     FB9E       76         0
                text14                             FC14     FC14       76         0
                text13                             F9B6     F9B6       34         0
                text12                             F88A     F88A       32         0
                text11                             F9EA     F9EA       34         0
                text10                             F8BC     F8BC       32         0
                text9                              F8EE     F8EE       32         0
                text8                              F920     F920       32         0
                text7                              FDA0     FDA0       C8         0
                text6                              FA86     FA86       58         0
                text5                              FD08     FD08       98         0
                text4                              FA1E     FA1E       34         0
                text3                              FB3C     FB3C       62         0
                text2                              FA52     FA52       34         0
                text1                              F952     F952       32         0
                text0                              FF34     FF34       CC         0
                cinit                              F984     F984       32         0
                idataCOMRAM                        F860     F860       2A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         2B       2B       10         1
                dataCOMRAM                            1        1       2A         1
                bssCOMRAM                            3B       3B        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   BANK8          

        CLASS   BANK9          

        CLASS   BANK10         

        CLASS   BANK11         

        CLASS   BANK12         

        CLASS   BANK13         

        CLASS   BANK14         

        CLASS   BANK15         

        CLASS   SFR            

        CLASS   CONFIG         
                config                           300000   300000        E         4

        CLASS   IDLOC          
                idloc                            200000   200000        8         5

        CLASS   EEDATA         

        CLASS   FARRAM         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                dataCOMRAM                     000001  00003E  00003F         1       1  COMRAM  
                idataCOMRAM                    00F860  00002A  00F88A      F860       0  CODE    
                text12                         00F88A  000032  00F8BC      7C45       0  CODE    
                text10                         00F8BC  000032  00F8EE      7C5E       0  CODE    
                text9                          00F8EE  000032  00F920      7C77       0  CODE    
                text8                          00F920  000032  00F952      7C90       0  CODE    
                text1                          00F952  000032  00F984      7CA9       0  CODE    
                cinit                          00F984  000032  00F9B6      7CC2       0  CODE    
                text13                         00F9B6  000034  00F9EA      7CDB       0  CODE    
                text11                         00F9EA  000034  00FA1E      7CF5       0  CODE    
                text4                          00FA1E  000034  00FA52      7D0F       0  CODE    
                text2                          00FA52  000034  00FA86      7D29       0  CODE    
                text6                          00FA86  000058  00FADE      7D43       0  CODE    
                text18                         00FADE  00005E  00FB3C      7D6F       0  CODE    
                text3                          00FB3C  000062  00FB9E      7D9E       0  CODE    
                text15                         00FB9E  000076  00FC14      7DCF       0  CODE    
                text14                         00FC14  000076  00FC8A      7E0A       0  CODE    
                text17                         00FC8A  00007E  00FD08      7E45       0  CODE    
                text5                          00FD08  000098  00FDA0      7E84       0  CODE    
                text7                          00FDA0  0000C8  00FE68      7ED0       0  CODE    
                text16                         00FE68  0000CC  00FF34      7F34       0  CODE    
                text0                          00FF34  0000CC  010000      7F9A       0  CODE    


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK10           000A00-000AFF              100
        BANK11           000B00-000BFF              100
        BANK12           000C00-000CFF              100
        BANK13           000D00-000DFF              100
        BANK14           000E00-000EFF              100
        BANK15           000F00-000F5F               60
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BANK8            000800-0008FF              100
        BANK9            000900-0009FF              100
        BIGRAM           00003F-000F5F              F21
        CODE             000004-00F85F             F85C
        COMRAM           00003F-00005F               21
        CONST            000004-00F85F             F85C
        EEDATA           F00000-F003FF              400
        MEDIUMCONST      001000-00F85F             E860
        RAM              000060-000F5F              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001000-00F85F              100
        STACK            000060-000F5F              F00

                                  Symbol Table

_LATA                                  (abs)        000F89
_LATB                                  (abs)        000F8A
_LATC                                  (abs)        000F8B
_LATD                                  (abs)        000F8C
_LATE                                  (abs)        000F8D
_PORTA                                 (abs)        000F80
_PORTB                                 (abs)        000F81
_PORTC                                 (abs)        000F82
_PORTD                                 (abs)        000F83
_PORTE                                 (abs)        000F84
_TRISA                                 (abs)        000F92
_TRISB                                 (abs)        000F93
_TRISC                                 (abs)        000F94
_TRISD                                 (abs)        000F95
_TRISE                                 (abs)        000F96
__HRAM                                 (abs)        000000
__Habs1                                abs1         000000
__Hbank0                               bank0        000000
__Hbank1                               bank1        000000
__Hbank10                              bank10       000000
__Hbank11                              bank11       000000
__Hbank12                              bank12       000000
__Hbank13                              bank13       000000
__Hbank14                              bank14       000000
__Hbank15                              bank15       000000
__Hbank2                               bank2        000000
__Hbank3                               bank3        000000
__Hbank4                               bank4        000000
__Hbank5                               bank5        000000
__Hbank6                               bank6        000000
__Hbank7                               bank7        000000
__Hbank8                               bank8        000000
__Hbank9                               bank9        000000
__Hbigbss                              bigbss       000000
__Hbigdata                             bigdata      000000
__Hbigram                              bigram       000000
__Hbss                                 bss          000000
__HbssCOMRAM                           bssCOMRAM    000000
__Hcinit                               cinit        000000
__Hclrtext                             clrtext      000000
__Hcomram                              comram       000000
__Hconfig                              config       30000E
__Hconst                               const        000000
__HcstackCOMRAM                        cstackCOMRAM 000000
__Hdata                                data         000000
__HdataCOMRAM                          dataCOMRAM   000000
__Heeprom_data                         eeprom_data  000000
__Hfarbss                              farbss       000000
__Hfardata                             fardata      000000
__Hibigdata                            ibigdata     000000
__Hidata                               idata        000000
__HidataCOMRAM                         idataCOMRAM  000000
__Hidloc                               idloc        200008
__Hifardata                            ifardata     000000
__Hinit                                init         000004
__Hintcode                             intcode      000000
__Hintcode_body                        intcode_body 000000
__Hintcodelo                           intcodelo    000000
__Hintentry                            intentry     000000
__Hintret                              intret       000000
__Hintsave_regs                        intsave_regs 000000
__Hirdata                              irdata       000000
__Hmediumconst                         mediumconst  000000
__HnvFARRAM                            nvFARRAM     000000
__Hnvbit                               nvbit        000000
__Hnvrram                              nvrram       000000
__Hparam                               rparam       000000
__Hpowerup                             powerup      000000
__Hram                                 ram          000000
__Hramtop                              ramtop       001000
__Hrbit                                rbit         000000
__Hrbss                                rbss         000000
__Hrdata                               rdata        000000
__Hreset_vec                           reset_vec    000000
__Hrparam                              rparam       000000
__Hsfr                                 sfr          000000
__Hsmallconst                          smallconst   000000
__Hspace_0                             (abs)        010000
__Hspace_1                             (abs)        00003F
__Hspace_2                             (abs)        000000
__Hspace_4                             (abs)        60000E
__Hstack                               stack        000000
__Hstruct                              struct       000000
__Htemp                                temp         000000
__Htext                                text         000000
__Htext0                               text0        000000
__Htext1                               text1        000000
__Htext10                              text10       000000
__Htext11                              text11       000000
__Htext12                              text12       000000
__Htext13                              text13       000000
__Htext14                              text14       000000
__Htext15                              text15       000000
__Htext16                              text16       000000
__Htext17                              text17       000000
__Htext18                              text18       000000
__Htext2                               text2        000000
__Htext3                               text3        000000
__Htext4                               text4        000000
__Htext5                               text5        000000
__Htext6                               text6        000000
__Htext7                               text7        000000
__Htext8                               text8        000000
__Htext9                               text9        000000
__LRAM                                 (abs)        000001
__Labs1                                abs1         000000
__Lbank0                               bank0        000000
__Lbank1                               bank1        000000
__Lbank10                              bank10       000000
__Lbank11                              bank11       000000
__Lbank12                              bank12       000000
__Lbank13                              bank13       000000
__Lbank14                              bank14       000000
__Lbank15                              bank15       000000
__Lbank2                               bank2        000000
__Lbank3                               bank3        000000
__Lbank4                               bank4        000000
__Lbank5                               bank5        000000
__Lbank6                               bank6        000000
__Lbank7                               bank7        000000
__Lbank8                               bank8        000000
__Lbank9                               bank9        000000
__Lbigbss                              bigbss       000000
__Lbigdata                             bigdata      000000
__Lbigram                              bigram       000000
__Lbss                                 bss          000000
__LbssCOMRAM                           bssCOMRAM    000000
__Lcinit                               cinit        000000
__Lclrtext                             clrtext      000000
__Lcomram                              comram       000000
__Lconfig                              config       000000
__Lconst                               const        000000
__LcstackCOMRAM                        cstackCOMRAM 000000
__Ldata                                data         000000
__LdataCOMRAM                          dataCOMRAM   000000
__Leeprom_data                         eeprom_data  000000
__Lfarbss                              farbss       000000
__Lfardata                             fardata      000000
__Libigdata                            ibigdata     000000
__Lidata                               idata        000000
__LidataCOMRAM                         idataCOMRAM  000000
__Lidloc                               idloc        000000
__Lifardata                            ifardata     000000
__Linit                                init         000000
__Lintcode                             intcode      000000
__Lintcode_body                        intcode_body 000000
__Lintcodelo                           intcodelo    000000
__Lintentry                            intentry     000000
__Lintret                              intret       000000
__Lintsave_regs                        intsave_regs 000000
__Lirdata                              irdata       000000
__Lmediumconst                         mediumconst  000000
__LnvFARRAM                            nvFARRAM     000000
__Lnvbit                               nvbit        000000
__Lnvrram                              nvrram       000000
__Lparam                               rparam       000000
__Lpowerup                             powerup      000000
__Lram                                 ram          000000
__Lramtop                              ramtop       001000
__Lrbit                                rbit         000000
__Lrbss                                rbss         000000
__Lrdata                               rdata        000000
__Lreset_vec                           reset_vec    000000
__Lrparam                              rparam       000000
__Lsfr                                 sfr          000000
__Lsmallconst                          smallconst   000000
__Lspace_0                             (abs)        000000
__Lspace_1                             (abs)        000000
__Lspace_2                             (abs)        000000
__Lspace_4                             (abs)        000000
__Lstack                               stack        000000
__Lstruct                              struct       000000
__Ltemp                                temp         000000
__Ltext                                text         000000
__Ltext0                               text0        000000
__Ltext1                               text1        000000
__Ltext10                              text10       000000
__Ltext11                              text11       000000
__Ltext12                              text12       000000
__Ltext13                              text13       000000
__Ltext14                              text14       000000
__Ltext15                              text15       000000
__Ltext16                              text16       000000
__Ltext17                              text17       000000
__Ltext18                              text18       000000
__Ltext2                               text2        000000
__Ltext3                               text3        000000
__Ltext4                               text4        000000
__Ltext5                               text5        000000
__Ltext6                               text6        000000
__Ltext7                               text7        000000
__Ltext8                               text8        000000
__Ltext9                               text9        000000
__S0                                   (abs)        010000
__S1                                   (abs)        00003F
__S2                                   (abs)        000000
__S4                                   (abs)        000000
__S5                                   (abs)        000000
___inthi_sp                            stack        000000
___intlo_sp                            stack        000000
___param_bank                          (abs)        000000
___rparam_used                         (abs)        000001
___sp                                  stack        000000
__accesstop                            (abs)        000060
__activetblptr                         (abs)        000002
__end_of__initialization               cinit        00F9AC
__end_of_button_get_status             text17       00FD08
__end_of_button_initialize             text6        00FADE
__end_of_gpio_pin_direction_intialize  text7        00FE68
__end_of_gpio_pin_read_value           text18       00FB3C
__end_of_gpio_pin_write_value          text16       00FF34
__end_of_main                          text0        010000
__end_of_motor_rotate_left             text13       00F9EA
__end_of_motor_rotate_right            text11       00FA1E
__end_of_motor_stop                    text2        00FA86
__end_of_motot_initialize              text4        00FA52
__end_of_move_backward                 text12       00F8BC
__end_of_move_forward                  text10       00F8EE
__end_of_move_left                     text9        00F920
__end_of_move_right                    text8        00F952
__end_of_relay_initialize              text5        00FDA0
__end_of_relay_turn_off                text15       00FC14
__end_of_relay_turn_on                 text14       00FC8A
__end_of_robot_initalize               text3        00FB9E
__end_of_stop                          text1        00F984
__initialization                       cinit        00F984
__mediumconst                          mediumconst  000000
__pbssCOMRAM                           bssCOMRAM    00003B
__pcinit                               cinit        00F984
__pcstackCOMRAM                        cstackCOMRAM 00002B
__pdataCOMRAM                          dataCOMRAM   000001
__pidataCOMRAM                         idataCOMRAM  00F860
__ptext0                               text0        00FF34
__ptext1                               text1        00F952
__ptext10                              text10       00F8BC
__ptext11                              text11       00F9EA
__ptext12                              text12       00F88A
__ptext13                              text13       00F9B6
__ptext14                              text14       00FC14
__ptext15                              text15       00FB9E
__ptext16                              text16       00FE68
__ptext17                              text17       00FC8A
__ptext18                              text18       00FADE
__ptext2                               text2        00FA52
__ptext3                               text3        00FB3C
__ptext4                               text4        00FA1E
__ptext5                               text5        00FD08
__ptext6                               text6        00FA86
__ptext7                               text7        00FDA0
__ptext8                               text8        00F920
__ptext9                               text9        00F8EE
__ramtop                               ramtop       001000
__size_of_button_get_status            (abs)        000000
__size_of_button_initialize            (abs)        000000
__size_of_gpio_pin_direction_intialize (abs)        000000
__size_of_gpio_pin_read_value          (abs)        000000
__size_of_gpio_pin_write_value         (abs)        000000
__size_of_main                         (abs)        000000
__size_of_motor_rotate_left            (abs)        000000
__size_of_motor_rotate_right           (abs)        000000
__size_of_motor_stop                   (abs)        000000
__size_of_motot_initialize             (abs)        000000
__size_of_move_backward                (abs)        000000
__size_of_move_forward                 (abs)        000000
__size_of_move_left                    (abs)        000000
__size_of_move_right                   (abs)        000000
__size_of_relay_initialize             (abs)        000000
__size_of_relay_turn_off               (abs)        000000
__size_of_relay_turn_on                (abs)        000000
__size_of_robot_initalize              (abs)        000000
__size_of_stop                         (abs)        000000
__smallconst                           smallconst   000000
_back                                  bssCOMRAM    00003D
_button_get_status                     text17       00FC8A
_button_initialize                     text6        00FA86
_gpio_pin_direction_intialize          text7        00FDA0
_gpio_pin_read_value                   text18       00FADE
_gpio_pin_write_value                  text16       00FE68
_lat_register                          dataCOMRAM   00000B
_left                                  bssCOMRAM    00003B
_main                                  text0        00FF34
_motor_rotate_left                     text13       00F9B6
_motor_rotate_right                    text11       00F9EA
_motor_stop                            text2        00FA52
_motot_initialize                      text4        00FA1E
_move_backward                         text12       00F88A
_move_btn                              dataCOMRAM   000027
_move_forward                          text10       00F8BC
_move_left                             text9        00F8EE
_move_right                            text8        00F920
_port_register                         dataCOMRAM   000001
_relay_initialize                      text5        00FD08
_relay_turn_off                        text15       00FB9E
_relay_turn_on                         text14       00FC14
_right                                 bssCOMRAM    00003C
_robot_initalize                       text3        00FB3C
_robot_motor                           dataCOMRAM   00001F
_stop                                  text1        00F952
_tris_register                         dataCOMRAM   000015
_up                                    bssCOMRAM    00003E
button_get_status@btn                  cstackCOMRAM 000034
button_get_status@btn_status           cstackCOMRAM 000036
button_initialize@btn                  cstackCOMRAM 000034
end_of_initialization                  cinit        00F9AC
gpio_pin_direction_intialize@direction cstackCOMRAM 00002C
gpio_pin_direction_intialize@pin       cstackCOMRAM 00002B
gpio_pin_direction_intialize@port      cstackCOMRAM 000033
gpio_pin_read_value@logic              cstackCOMRAM 00002C
gpio_pin_read_value@pin                cstackCOMRAM 00002B
gpio_pin_read_value@port               cstackCOMRAM 000033
gpio_pin_write_value@logic             cstackCOMRAM 00002C
gpio_pin_write_value@pin               cstackCOMRAM 00002B
gpio_pin_write_value@port              cstackCOMRAM 000033
intlevel0                              text         000000
intlevel1                              text         000000
intlevel2                              text         000000
intlevel3                              text         000000
motor_rotate_left@motor                cstackCOMRAM 000038
motor_rotate_right@motor               cstackCOMRAM 000038
motor_stop@motor                       cstackCOMRAM 000038
motot_initialize@motor                 cstackCOMRAM 000038
relay_initialize@relay                 cstackCOMRAM 000034
relay_turn_off@relay                   cstackCOMRAM 000034
relay_turn_on@relay                    cstackCOMRAM 000034
stackhi                                (abs)        000F5F
stacklo                                (abs)        000060
start                                  init         000000
start_initialization                   cinit        00F984


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 36 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  197[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_button_get_status
		_move_backward
		_move_forward
		_move_left
		_move_right
		_robot_initalize
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 113 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_stop *****************
 Defined at:
		line 64 in file "ecu/ecu_motor/ecu_motor.c"
 Parameters:    Size  Location     Type
  motor           2   13[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E469
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
 This function is called by:
		_stop
 This function uses a non-reentrant model


 *************** function _robot_initalize *****************
 Defined at:
		line 69 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_button_initialize
		_motot_initialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motot_initialize *****************
 Defined at:
		line 15 in file "ecu/ecu_motor/ecu_motor.c"
 Parameters:    Size  Location     Type
  motor           2   13[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E469
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_initialize
 This function is called by:
		_robot_initalize
 This function uses a non-reentrant model


 *************** function _relay_initialize *****************
 Defined at:
		line 15 in file "ecu/ecu_relay/ecu_relay.c"
 Parameters:    Size  Location     Type
  relay           2    9[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_direction_intialize
		_gpio_pin_write_value
 This function is called by:
		_motot_initialize
 This function uses a non-reentrant model


 *************** function _button_initialize *****************
 Defined at:
		line 17 in file "ecu/ecu_button/ecu_button.c"
 Parameters:    Size  Location     Type
  btn             2    9[COMRAM] PTR struct .
		 -> move_btn(4), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_direction_intialize
 This function is called by:
		_robot_initalize
 This function uses a non-reentrant model


 *************** function _gpio_pin_direction_intialize *****************
 Defined at:
		line 23 in file "mcal/mcal_gpio/mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2680
  pin             1    0[COMRAM] enum E2670
  direction       1    1[COMRAM] enum E2666
 Auto vars:     Size  Location     Type
  port            1    8[COMRAM] enum E2680
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_button_initialize
		_relay_initialize
		_led_initialize
 This function uses a non-reentrant model


 *************** function _move_right *****************
 Defined at:
		line 97 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_rotate_left
		_motor_rotate_right
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _move_left *****************
 Defined at:
		line 105 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_rotate_left
		_motor_rotate_right
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _move_forward *****************
 Defined at:
		line 81 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_rotate_right
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_rotate_right *****************
 Defined at:
		line 31 in file "ecu/ecu_motor/ecu_motor.c"
 Parameters:    Size  Location     Type
  motor           2   13[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E469
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
		_relay_turn_on
 This function is called by:
		_move_forward
		_move_right
		_move_left
 This function uses a non-reentrant model


 *************** function _move_backward *****************
 Defined at:
		line 89 in file "application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_rotate_left
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_rotate_left *****************
 Defined at:
		line 48 in file "ecu/ecu_motor/ecu_motor.c"
 Parameters:    Size  Location     Type
  motor           2   13[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E469
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
		_relay_turn_on
 This function is called by:
		_move_backward
		_move_right
		_move_left
 This function uses a non-reentrant model


 *************** function _relay_turn_on *****************
 Defined at:
		line 33 in file "ecu/ecu_relay/ecu_relay.c"
 Parameters:    Size  Location     Type
  relay           2    9[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_write_value
 This function is called by:
		_motor_rotate_right
		_motor_rotate_left
 This function uses a non-reentrant model


 *************** function _relay_turn_off *****************
 Defined at:
		line 49 in file "ecu/ecu_relay/ecu_relay.c"
 Parameters:    Size  Location     Type
  relay           2    9[COMRAM] PTR struct .
		 -> robot_motor(8), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_write_value
 This function is called by:
		_motor_rotate_right
		_motor_rotate_left
		_motor_stop
 This function uses a non-reentrant model


 *************** function _gpio_pin_write_value *****************
 Defined at:
		line 67 in file "mcal/mcal_gpio/mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2680
  pin             1    0[COMRAM] enum E2670
  logic           1    1[COMRAM] enum E2662
 Auto vars:     Size  Location     Type
  port            1    8[COMRAM] enum E2680
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_relay_initialize
		_relay_turn_on
		_relay_turn_off
		_led_initialize
		_led_turn_on
		_led_turn_off
 This function uses a non-reentrant model


 *************** function _button_get_status *****************
 Defined at:
		line 33 in file "ecu/ecu_button/ecu_button.c"
 Parameters:    Size  Location     Type
  btn             2    9[COMRAM] PTR struct .
		 -> move_btn(4), 
  btn_status      2   11[COMRAM] PTR enum E2720
		 -> left(1), right(1), back(1), up(1), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_read_value
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _gpio_pin_read_value *****************
 Defined at:
		line 94 in file "mcal/mcal_gpio/mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2680
  pin             1    0[COMRAM] enum E2670
  logic           2    1[COMRAM] PTR enum E2662
		 -> left(1), right(1), back(1), up(1), 
 Auto vars:     Size  Location     Type
  port            1    8[COMRAM] enum E2680
  ret             1    0        enum E2658
 Return value:  Size  Location     Type
                  1    wreg      enum E2658
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_button_get_status
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
mcal/mcal_gpio/mcal_gpio.c
		_gpio_pin_write_value		CODE           	FE68	0000	204
		_gpio_pin_direction_intialize		CODE           	FDA0	0000	200
		_gpio_pin_read_value		CODE           	FADE	0000	94

mcal/mcal_gpio/mcal_gpio.c estimated size: 498

ecu/ecu_motor/ecu_motor.c
		_motot_initialize		CODE           	FA1E	0000	52
		_motor_rotate_left		CODE           	F9B6	0000	52
		_motor_stop    		CODE           	FA52	0000	52
		_motor_rotate_right		CODE           	F9EA	0000	52

ecu/ecu_motor/ecu_motor.c estimated size: 208

ecu/ecu_relay/ecu_relay.c
		_relay_turn_off		CODE           	FB9E	0000	118
		_relay_initialize		CODE           	FD08	0000	152
		_relay_turn_on 		CODE           	FC14	0000	118

ecu/ecu_relay/ecu_relay.c estimated size: 388

shared
		__initialization		CODE           	F984	0000	40

shared estimated size: 40

application.c
		_move_right    		CODE           	F920	0000	50
		_stop          		CODE           	F952	0000	50
		_move_forward  		CODE           	F8BC	0000	50
		_main          		CODE           	FF34	0000	204
		_move_backward 		CODE           	F88A	0000	50
		_move_left     		CODE           	F8EE	0000	50
		_robot_initalize		CODE           	FB3C	0000	98

application.c estimated size: 552

ecu/ecu_button/ecu_button.c
		_button_initialize		CODE           	FA86	0000	88
		_button_get_status		CODE           	FC8A	0000	126

ecu/ecu_button/ecu_button.c estimated size: 214

